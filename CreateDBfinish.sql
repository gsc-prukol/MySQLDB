-- MySQL Script generated by MySQL Workbench
-- пт, 09-лис-2018 13:00:34 +0200
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

#SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
#SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
#SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema kursova
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema kursova
-- -----------------------------------------------------
#CREATE SCHEMA IF NOT EXISTS `kursova2` DEFAULT CHARACTER SET utf8;
#USE `ka66_03` ;
ALTER SCHEMA `ka66_03`  DEFAULT COLLATE utf8_unicode_ci ;

-- -----------------------------------------------------
-- Table `kursova`.`Users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `users` (
  `id_user` INT UNSIGNED NOT NULL AUTO_INCREMENT ,
  `login` VARCHAR(45) NOT NULL UNIQUE,
  `password_hash` VARCHAR(100) NOT NULL,
  `name` VARCHAR(45) NOT NULL DEFAULT "Користувач",
  `status` CHAR(1) NOT NULL DEFAULT 'u' CHECK (`status` in ('a', 'm', 'u', 'd')), #--admin, moderator, user
  PRIMARY KEY (`id_user`)
  ) ENGINE = InnoDB
	PACK_KEYS = DEFAULT;


-- -----------------------------------------------------
-- Table `kursova`.`videos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `videos` (
  `id_video` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(200) NOT NULL,
  `url` VARCHAR(200) NOT NULL DEFAULT "",
  PRIMARY KEY (`id_video`)
  ) ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kursova`.`groups`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `groups` (
  `id_group` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(80) NOT NULL,
  PRIMARY KEY (`id_group`)
  ) ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kursova`.`Users_has_Video`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `user_has_video` (
  `id_user` INT UNSIGNED NOT NULL,
  `id_video` INT UNSIGNED NOT NULL,
  `status` CHAR(1) NOT NULL,
  PRIMARY KEY (`id_user`, `id_video`),
  INDEX `fk_id_video` (`id_video` ASC),
  INDEX `fk_id_user` (`id_user` ASC),
  CONSTRAINT `fk_id_user_UHV`
    FOREIGN KEY (`id_user`)
    REFERENCES `users` (`id_user`),
  CONSTRAINT `fk_id_video_UHV`
    FOREIGN KEY (`id_video`)
    REFERENCES `videos` (`id_video`),
    CONSTRAINT `type_status` CHECK(`status` IN ('c', 'h', 's')) #completed, happens, scheduled
) ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kursova`.`Video_has_Groups`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `video_has_group` (
  `id_video` INT UNSIGNED NOT NULL,
  `id_group` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id_video`, `id_group`),
  INDEX `fk_id_group` (`id_group` ASC),
  INDEX `fk_id_video` (`id_video` ASC),
  CONSTRAINT `fk_id_video_VHG`
    FOREIGN KEY (`id_video`)
    REFERENCES `videos` (`id_video`),
  CONSTRAINT `fk_id_group_VHG`
    FOREIGN KEY (`id_group`)
    REFERENCES `groups` (`id_group`)
    ) ENGINE = InnoDB;
    
CREATE TABLE IF NOT EXISTS `user_has_group` (
  `id_user` INT UNSIGNED NOT NULL,
  `id_group` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id_user`, `id_group`),
  INDEX `fk_id_group` (`id_group` ASC),
  INDEX `fk_id_user` (`id_user` ASC),
  CONSTRAINT `fk_id_video_UHG`
    FOREIGN KEY (`id_user`)
    REFERENCES `users` (`id_user`),
  CONSTRAINT `fk_id_group_UHG`
    FOREIGN KEY (`id_group`)
    REFERENCES `groups` (`id_group`)
    ) ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS `log` (
  `id_log` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `log_message` VARCHAR(200) NOT NULL,
  `table_name` VARCHAR(20) NOT NULL,
  `id_row_table` INT UNSIGNED NOT NULL,
  `action_type` CHAR(1) NOT NULL CHECK (`action_type` IN ('i', 'u', 'd')) , # insert, update, delete
  `time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id_log`)
) ENGINE = InnoDB;

